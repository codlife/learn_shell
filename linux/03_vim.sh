#! /bin/sh
:<<!
1:方向移动

hjkl上下左右四个方向
i 命令模式到插入模式的切换
number j向下移动j行 
number k向上移动k行
ctrl + f 屏幕向下移动一页
ctrl + b 屏幕向上移动一页
ctrl + d 屏幕向下移动半页
ctrl + u 屏幕向上移动半页
+ 光标移动到非空格符的下一行
- 光标移动到非光空格符的上一行
n<space> 按下数字再按空格键，光标会向右移动n个字符 

H 移动光标到屏幕的最上方那一行能得第一个字符
M 移动光标到屏幕的中央的哪一行的第一个字符
L 移动光标到屏幕的最下方的第一行的第一个字符
G 移动到这个文档的最后一行
gg 移动到这个文档的第一行，相当于1G啊
n<enter>光标向下移动n行
!

:<<!
2:搜索替换

/word 寻找一个叫做：word的字符串，从上往下查找
?word 寻找一个叫做：word的字符串, 从下往上查找
n 配置上面的/或者?使用
如果是/ 则从上往下依次返回查找结果
如果是？则从下往上依次返回查找结果
N 与 n 的作用相反

:1,$s/word1/word2/gc 从第一行开始直到最后一行寻找word1,并将该字符串替换成

:n1,n2s/word1/word2/g 从n1到n2行之间寻找word1这个单词，并将该
:100,200s/bird/BIRD/g 将100-200行之间的bird替换成BIRD
!


:<<!
3:删除、复制与贴士

x X 在一行字中，x为向后删除一个字符，X为向前删除一个字符
nx 向后删除nx个字符
dd 删除游标所在的一行
ndd n为数字，删除光标向下的n行，例如20dd,则是删除20行
yy 复制游标所在的一行
nyy 复制游标所在的向下的n行，例如20yy则是复制20行
 
p,P p为将已复制的数据贴在光标的下一行
    P为将已复制的数据贴在光标的上一行

u   复原上一个动作
ctrl + r 重做上一个动作
!

:<<!
第二部分：一般模式切换到编辑模式可用的按钮说明
i
a, A   进入模式，a从光标处的下一个字符开始输入A为从光标所在行>    的
	最后一个字符串开始输入
o, O   进入模式，重新开始一行，o从下一行开始输入，O从上一行开>    始输出
   进入模式，重新开始一行，o从下一行开始输入，O从上一行开>    始输出
:<<!
:w filename  将文件内容重定向到filename中
:! command 暂时离开vi执行command

:set nu 显示行号，设定之后，会在每一行的前缀显示该行号
:set nonu 与set nu相反,未取消行号！

!

:<<!
vim 中批量添加注释
可以使用替换符号
添加注释
:起始行号,结束行号s/^/注释符/g
取消注释
:起始行号,结束行号s/^注释符//g
!

